@page "/"
@using telerikReportingDemo.Interfaces
@using telerikReportingDemo.Models
@inject ITenantIdentifier tenantIdentifier
@inject IInvoiceService invoiceService

<PageTitle>Home</PageTitle>

<h1>Hello, @CompanyName!</h1>

<TelerikButton OnClick="@SayHelloHandler"
               ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Say Hello</TelerikButton>

<p> @HelloString </p>

Welcome to your new app.

@if(Invoice is not null)
{
    <p>
        @Invoice.ToString();
    </p>
    
}

@code
{
    string CompanyName = "Invalid Visitor. Are you lost?";
    Invoice? Invoice;
    private MarkupString HelloString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var tenant = await tenantIdentifier.GetTenantAsync();

        if(tenant is not null)
        {
            CompanyName = tenant.Name;
            Invoice = await invoiceService.GetInvoiceAsync(1);
        }

        
    }

    private void SayHelloHandler()
    {
        string msg = string.Format("Hello from <strong>Telerik UI for Blazor</strong> at {0}.<br /> Now you can use C# to write front-end!", DateTime.Now);
        HelloString = new MarkupString(msg);
    }

}